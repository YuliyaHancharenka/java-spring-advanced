"C:\Program Files\Java\jdk-9.0.4\bin\java" -Dvisualvm.id=104930931570645 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\lib\idea_rt.jar=20651:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\bin" -Dfile.encoding=UTF-8 -classpath D:\Install\Java\Projects\jmp\files\jmh_file_benchmark\target\classes;C:\Users\julia\.m2\repository\org\openjdk\jmh\jmh-core\1.20\jmh-core-1.20.jar;C:\Users\julia\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\julia\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\julia\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.19\jmh-generator-annprocess-1.19.jar com.epam.file.FileBenchmark
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/C:/Users/julia/.m2/repository/org/openjdk/jmh/jmh-core/1.20/jmh-core-1.20.jar) to field java.io.PrintStream.charOut
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\jdk-9.0.4\bin\java.exe
# VM options: -Dvisualvm.id=104930931570645 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\lib\idea_rt.jar=20651:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.epam.file.FileBenchmark.channelFileCopy

# Run progress: 0,00% complete, ETA 00:00:44
# Fork: 1 of 1
# Warmup Iteration   1: 1078,288 ms/op
Iteration   1: 0,108 ms/op
Iteration   2: 0,146 ms/op
Iteration   3: 0,150 ms/op
Iteration   4: 0,107 ms/op
Iteration   5: 0,840 ms/op
Iteration   6: 0,184 ms/op
Iteration   7: 0,117 ms/op
Iteration   8: 0,135 ms/op
Iteration   9: 0,141 ms/op
Iteration  10: 0,167 ms/op


Result "com.epam.file.FileBenchmark.channelFileCopy":
  0,210 ±(99.9%) 0,337 ms/op [Average]
  (min, avg, max) = (0,107, 0,210, 0,840), stdev = 0,223
  CI (99.9%): [≈ 0, 0,547] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\jdk-9.0.4\bin\java.exe
# VM options: -Dvisualvm.id=104930931570645 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\lib\idea_rt.jar=20651:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.epam.file.FileBenchmark.nioFileCopy

# Run progress: 25,00% complete, ETA 00:00:47
# Fork: 1 of 1
# Warmup Iteration   1: 0,117 ms/op
Iteration   1: 0,121 ms/op
Iteration   2: 0,124 ms/op
Iteration   3: 0,140 ms/op
Iteration   4: 0,109 ms/op
Iteration   5: 0,136 ms/op
Iteration   6: 0,119 ms/op
Iteration   7: 0,115 ms/op
Iteration   8: 0,118 ms/op
Iteration   9: 0,108 ms/op
Iteration  10: 0,132 ms/op


Result "com.epam.file.FileBenchmark.nioFileCopy":
  0,122 ±(99.9%) 0,016 ms/op [Average]
  (min, avg, max) = (0,108, 0,122, 0,140), stdev = 0,011
  CI (99.9%): [0,106, 0,138] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\jdk-9.0.4\bin\java.exe
# VM options: -Dvisualvm.id=104930931570645 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\lib\idea_rt.jar=20651:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.epam.file.FileBenchmark.streamBufferFileCopy

# Run progress: 50,00% complete, ETA 00:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 0,154 ms/op
Iteration   1: 0,134 ms/op
Iteration   2: 0,128 ms/op
Iteration   3: 0,124 ms/op
Iteration   4: 0,129 ms/op
Iteration   5: 0,131 ms/op
Iteration   6: 0,122 ms/op
Iteration   7: 0,128 ms/op
Iteration   8: 0,123 ms/op
Iteration   9: 0,139 ms/op
Iteration  10: 0,167 ms/op


Result "com.epam.file.FileBenchmark.streamBufferFileCopy":
  0,132 ±(99.9%) 0,020 ms/op [Average]
  (min, avg, max) = (0,122, 0,132, 0,167), stdev = 0,013
  CI (99.9%): [0,112, 0,152] (assumes normal distribution)


# JMH version: 1.20
# VM version: JDK 9.0.4, VM 9.0.4+11
# VM invoker: C:\Program Files\Java\jdk-9.0.4\bin\java.exe
# VM options: -Dvisualvm.id=104930931570645 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\lib\idea_rt.jar=20651:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017\bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.epam.file.FileBenchmark.streamFileCopy

# Run progress: 75,00% complete, ETA 00:00:13
# Fork: 1 of 1
# Warmup Iteration   1: 0,122 ms/op
Iteration   1: 0,120 ms/op
Iteration   2: 0,148 ms/op
Iteration   3: 0,109 ms/op
Iteration   4: 0,108 ms/op
Iteration   5: 0,104 ms/op
Iteration   6: 0,131 ms/op
Iteration   7: 0,119 ms/op
Iteration   8: 0,120 ms/op
Iteration   9: 0,141 ms/op
Iteration  10: 0,141 ms/op


Result "com.epam.file.FileBenchmark.streamFileCopy":
  0,124 ±(99.9%) 0,023 ms/op [Average]
  (min, avg, max) = (0,104, 0,124, 0,148), stdev = 0,016
  CI (99.9%): [0,101, 0,148] (assumes normal distribution)


# Run complete. Total time: 00:00:54

Benchmark                           Mode  Cnt  Score   Error  Units
FileBenchmark.channelFileCopy       avgt   10  0,210 ± 0,337  ms/op
FileBenchmark.nioFileCopy           avgt   10  0,122 ± 0,016  ms/op
FileBenchmark.streamBufferFileCopy  avgt   10  0,132 ± 0,020  ms/op
FileBenchmark.streamFileCopy        avgt   10  0,124 ± 0,023  ms/op

Process finished with exit code 0
